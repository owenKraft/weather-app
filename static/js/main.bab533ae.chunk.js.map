{"version":3,"sources":["components/Weather.js","components/InputLocale.js","App.js","index.js"],"names":["Weather","props","string","unitLetter","weatherData","displayLocation","name","displayDesc","weather","description","charAt","toUpperCase","slice","displayHumidity","main","humidity","displayWind","Math","round","wind","speed","displayWeatherIcon","icon","displayTemp","convertTemps","temp","displayFeelsLike","feels_like","units","className","id","src","alt","htmlFor","type","onChange","getUnit","InputLocale","placeholder","onKeyPress","e","code","getWeather","listenEnterKey","App","useState","setWeatherData","setUnits","callWeatherAPI","location","a","fetch","mode","response","ok","Error","json","data","console","log","useEffect","unitCheckboxValue","document","querySelector","value","undefined","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bab533ae.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst Weather = (props) => {\n    const weatherData = props.weatherData\n    \n    const displayLocation = weatherData.name\n    const displayDesc = capitalizeFirstLetter(weatherData.weather[0].description)\n    const displayHumidity = weatherData.main.humidity\n    const displayWind = Math.round(weatherData.wind.speed)\n    const displayWeatherIcon = \"http://openweathermap.org/img/wn/\" + weatherData.weather[0].icon + \"@2x.png\"\n    let displayTemp = Math.round(convertTemps(weatherData.main.temp))\n    let displayFeelsLike = Math.round(convertTemps(weatherData.main.feels_like))\n\n    let unitLetter\n    if(props.units === \"imperial\"){\n        unitLetter = \"F\"\n    } else {\n        unitLetter = \"C\"\n    }\n\n    function convertTemps(temp){\n        if(props.units === \"imperial\"){\n            return (temp - 273.15) * (9/5) + 32\n        } else if (props.units === \"metric\"){\n            return temp - 273.15\n        }\n    }\n\n    function capitalizeFirstLetter(string) {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n\n    return (\n        <div className=\"full-width dark-background flex-center-justify flex-center-align\">\n            <div className=\"div-weather flex-center-justify\">\n                <div id=\"current-location\" className=\"flex-center-justify\">\n                    {displayLocation}\n                </div>\n                \n                <div id=\"div-temp\" className=\"flex-center-justify\">\n                    <div id=\"current-temp-display\">\n                        {displayTemp}\n                    </div>\n                    <div id=\"current-temp-text\" className=\"flex-center-justify\">\n                        °{unitLetter} (Currently)\n                    </div>\n                </div>\n\n                <div id=\"div-weather-details\" className=\"flex-wrap\">\n                    <div id=\"current-desc\" className=\"full-width flex-center-align\">\n                        <img src={displayWeatherIcon} alt=\"\"></img>\n                        {displayDesc}\n                    </div>\n\n                    <div>\n                        <div id=\"current-feels-like\" className=\"full-width\">\n                            Feels like: {displayFeelsLike}°\n                        </div>\n                        <div id=\"current-humidity\" className=\"full-width\">\n                            Humidity: {displayHumidity}%\n                        </div>\n                        <div id=\"current-wind\" className=\"full-width\">\n                            Wind: {displayWind} mph\n                        </div>\n                    </div>\n                </div>\n\n\n                <div className=\"toggle-switch\">\n                    <label htmlFor=\"toggleSwitch\">\n                        Display temps in Celsius?\n                    </label>\n                    <input\n                        type=\"checkbox\"\n                        name=\"toggleSwitch\"\n                        id=\"toggleSwitch\"\n                        onChange={props.getUnit}\n                    />\n                </div>\n\n            </div>\n        </div>\n    );\n};\n\nexport default Weather;","import React from 'react';\n\nconst InputLocale = (props) => {\n\n    const listenEnterKey = (e) => {\n        if(e.code === 'Enter'){\n            props.getWeather()\n        }\n    }\n\n    return (\n        <div id=\"div-input\" className=\"flex-center-align\">\n            <div id=\"div-location\" className=\"flex-wrap\">\n                <input id=\"input-location\" className=\"dark-background\" placeholder=\"Search location\" onKeyPress={(e) => listenEnterKey(e)}></input>\n            </div>\n        </div>\n    );\n};\n\nexport default InputLocale;","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Weather from './components/Weather'\nimport InputLocale from './components/InputLocale'\n\nfunction App() {\n  const [weatherData,setWeatherData] = useState()\n  const [units,setUnits] = useState('imperial')\n\n  async function callWeatherAPI(location){\n    try {  \n      const response = await fetch('http://api.openweathermap.org/data/2.5/weather?q=' + location + '&APPID=561d4ec8d003285db9993fd437a143d5', {mode: 'cors'})\n      if (!response.ok) {\n        throw new Error(\"bad network request\");\n      }\n      \n      let data = await response.json()\n      console.log(data)\n      setWeatherData(data)\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  useEffect(() => {\n    callWeatherAPI('charlotte')\n  },[])\n\n  const getWeather = () => {\n      const location = document.querySelector(\"#input-location\").value\n      const unit = getUnit()\n      callWeatherAPI(location,unit)\n  }\n\n  console.log(\"rendered\")\n\n  const getUnit = () => {\n    const unitCheckboxValue = (document.querySelector('#toggleSwitch:checked') !== null)\n\n    if(unitCheckboxValue === false){\n        setUnits(\"imperial\")\n    } else if (unitCheckboxValue === true){\n        setUnits(\"metric\")\n    }\n  }\n\n  return (\n    <div>\n      <InputLocale \n        getWeather={getWeather}\n      />\n      <div className=\"container flex-center-align\">\n        {weatherData === undefined ? \"\" : \n          <Weather\n            getUnit={getUnit}\n            weatherData={weatherData}\n            units = {units}\n          />\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}